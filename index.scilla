(***************************************************)
(*                 Scilla version                  *)
(***************************************************)
 
scilla_version 0
 
(***************************************************)
(*               Associated library                *)
(***************************************************)
 
library Chat3
 let zero = Uint128 0 (*unsigned int of 128 bits *)
 let zero_address= 0x0000000000000000000000000000000000000000
 
 
(* Library code block follows *)
 
 
 
(***************************************************)
(*             Contract definition                 *)
(***************************************************)
 
contract Chat3
 
(* Immutable fields declaration *)
 
(contract_owner : ByStr20) (*type byte string 20 *)
 
(* Mutable fields declaration *)
 
field recent_chat_mssg : String = ""
field recent_chat_sender : ByStr20 = zero_address
field initial_contract_owner : ByStr20 = contract_owner

procedure isOwner()
(* statements go below *)
    current_owner <- initial_contract_owner ;
    is_owner = builtin eq current_owner _sender ;
    match is_owner with
        | True =>
        (*statements for true*)
        
        | False =>
         (*statements for False*)
         err = {
             _exception: "NotOwnerUnauthorizedError"
         };
         throw err
     end
    
end

 
(* Transitions *)
 
 
(* Transition signature *)
transition sendMsg (msg : String, sendTo: ByStr20)
  isOwner;
  message = {
      _tag: "recvMsg";
      _recipient: sendTo;
      _amount: zero;
      message: msg
  };
  msg_to_sender = one_msg message;
  send msg_to_sender;
  e = {
      _eventname: "sendMsg";
      sendTo: sendTo;
      message: msg
  };
  event e
end
 
transition secondTransition (param_1: type_1)
  (* Transition body *)
 
end
 
